---
kind: pipeline
type: docker
name: dev

steps:
  - name: download submodules and fetch pages branch
    image: alpine/git
    pull: always
    commands:
      - git submodule update --init --recursive
      - git fetch origin +refs/heads/pages

  - name: mkdocs build
    image: squidfunk/mkdocs-material:latest
    pull: always
    entrypoint: [/bin/sh]
    commands:
      - python3 -m pip install --no-cache-dir -r requirements.txt
      - mkdocs build --clean --verbose -d /build/dev
    volumes:
      - name: build
        path: /build

  - name: switch to pages branch and replace old files
    image: alpine/git
    commands:
      - git checkout pages
      - git pull
      - cp -r /build/dev ./
    volumes:
      - name: build
        path: /build

  - name: push
    image: alpine/git
    commands:
      - apk add --no-cache openssh
      - eval `ssh-agent -s`
      - echo "$SSH_KEY" | ssh-add -
      - mkdir -p ~/.ssh
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - git config --global user.name "ARhackintosh-Bot"
      - git config --global user.email "$BOT_EMAIL"
      - git remote set-url origin ssh://git@codeberg.org/FarisZR/ARtutorial.git
      - git checkout pages
      - git add dev
      - git commit -m "رفع اخر نسخه تطوير من $DRONE_COMMIT_SHA"
      - git push -f
    environment:
      SSH_KEY:
        from_secret: drone_ssh_key
      BOT_EMAIL:
        from_secret: drone_bot_email

volumes:
  - name: build
    temp: {}

trigger:
  branch:
  - V3-Dev
  event:
  - push
  - custom

---
kind: pipeline
type: docker
name: Release

steps:
  - name: download submodules and fetch pages branch
    image: alpine/git
    pull: always
    commands:
      - git submodule update --init --recursive
      - git fetch origin +refs/heads/pages

  - name: mkdocs build
    image: squidfunk/mkdocs-material:latest
    pull: always
    entrypoint: [/bin/sh]
    commands:
      - python3 -m pip install --no-cache-dir -r requirements.txt
      - mkdocs build --clean --verbose -d /build/release
    volumes:
      - name: build
        path: /build

  - name: switch to pages branch and clear old files
    image: alpine/git
    commands:
      - git checkout pages
      - git pull
      - mkdir -p /build/dev
      - cp -r ./dev  /build/
      - rm -rf ./*
      - cp -r /build/release/* ./
      - cp -r /build/dev ./
    volumes:
      - name: build
        path: /build

  - name: push
    image: alpine/git
    commands:
      - apk add --no-cache openssh
      - eval `ssh-agent -s`
      - echo "$SSH_KEY" | ssh-add -
      - mkdir -p ~/.ssh
      - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
      - git config --global user.name "ARhackintosh-bot"
      - git config --global user.email "$BOT_EMAIL"
      - git remote set-url origin ssh://git@codeberg.org/FarisZR/ARtutorial.git
      - git checkout pages
      - git add -A
      - git commit -m "رفع اخر اصدار من $DRONE_COMMIT_SHA"
      - git push -f
    environment:
      SSH_KEY:
        from_secret: drone_ssh_key
      BOT_EMAIL:
        from_secret: drone_bot_email

volumes:
  - name: build
    temp: {}

trigger:
  branch:
  - V3
  event:
  - push
  - custom

---
kind: pipeline
type: docker
name: pull-test

steps:
  - name: download submodules
    image: alpine/git
    pull: always
    commands:
    - git submodule update --init --recursive

  - name: mkdocs build
    image: squidfunk/mkdocs-material:latest
    pull: always
    entrypoint: [/bin/sh]
    commands:
      - python3 -m pip install --no-cache-dir -r requirements.txt
      - mkdocs build --clean --verbose -d /drone/src/build/

trigger:
  event:
  - pull_request