# This is a basic workflow to help you get started with Actions

name: dev-Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    paths: 
      - 'source/**'
      - 'mkdocs-dev.yml'
      - '.github/workflows/dev.yml'
      - 'requirements.txt'
      - 'overrides/**'
    branches: [ v2-dev ]
  pull_request:
    branches: [ v2-dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout 🛎️
      uses: actions/checkout@v2 
      with:
        persist-credentials: false
        fetch-depth: '0'

    # setup python
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools
        python -m pip install -U pip wheel
        python -m pip install -r requirements.txt
        pip show mkdocs-material

    # - name: mkdocs build and push
    #   run: |
    #     git config user.name "dev-build"
    #     git config user.email "41898282+dev-build@users.noreply.github.com"
    #     git remote add gh-token "https://github.com/ARhackintosh/ARtutorial.git"
    #     git fetch gh-token && git fetch gh-token gh-pages:gh-pages
    #     python -m mkdocs gh-deploy -d ./dev --clean --verbose -m "dev-Build deploy (${GITHUB_SHA:0:7})" --remote-name gh-token 
    #     git push gh-token gh-pages

    # - name: mkdocs build and push
    #   run: |
    #     git config user.name "dev-build"
    #     git config user.email "41898282+dev-build@users.noreply.github.com"
    #     mkdocs build --clean --verbose -d ./docs/dev
    #     git add ./docs
    #     git commit -m "dev-Build deploy (${GITHUB_SHA:0:7})"
    #     git push

    # - name: get release files
    #   run: |
    #     git clone https://github.com/ARhackintosh/ARtutorial --branch gh-pages --single-branch site --depth 1
    #     rm -rf ./site/.git

    - name: mkdocs build
      run: mkdocs build --clean --verbose -d site -f mkdocs-dev.yml

    # - name: mkdocs build into root 
    #   run : mkdocs build --clean --verbose

    # - name: ghp-import
    #   run: |
    #     git pull
    #     git config user.name "dev-build"
    #     git config user.email "41898282+dev-build@users.noreply.github.com"
    #     ghp-import -m "dev-Build deploy (${GITHUB_SHA:0:7})" -p site

    - name: Deploy 🚀
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages # The branch the action should deploy to.
        FOLDER: site # The folder the action should deploy.
        TARGET_FOLDER: dev #نسخه التطوير
        COMMIT_MESSAGE: "dev-Build: ${{ github.sha }} رفع نسخه التطوير مع تعديل"
        CLEAN: true # Automatically remove deleted files from the deploy branch

    - name: Cache pip files
      uses: actions/cache@v2
      env:
        cache-name: pip-reg
      with:
        path: $HOME/.cache/pip
        key: pip-reg
